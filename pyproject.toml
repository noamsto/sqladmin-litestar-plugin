[project]
name = "sqladmin-litestar-plugin"
version = "0.1.0"
description = ""
authors = [{ name = "Peter Schutt", email = "peter.github@proton.me" }]
readme = "README.md"
requires-python = ">=3.9"

dependencies = [
    "litestar",
    "starlette-admin",
    "typing-extensions",
    "wtforms",
]

[dependency-groups]
dev = [
    "advanced-alchemy",
    "anyio",
    "codespell",
    "coverage",
    "mypy",
    "pytest",
    "pytest-mock",
    "ruff",
    "sqlalchemy",
    "starlette",
    "types-wtforms",
]

[project.optional-dependencies]
examples = ["aiosqlite", "uvicorn"]


[tool.hatch.build.targets.wheel]
only-include = ["starlette_admin_litestar_plugin"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.codespell]
skip = ".git.,.idea,.mypy_cache,.venv"

[tool.coverage.report]
show_missing = true
exclude_lines = [
    "if TYPE_CHECKING",
    "pragma: no cover",
    "if __name__ == \"__main__\":",
    "@overload",
    "raise NotImplementedError",
]

[tool.coverage.run]
branch = true
omit = ["tests/*"]
source = ["starlette_admin_litestar_plugin"]

[tool.mypy]
enable_error_code = [
    "ignore-without-code",
    "redundant-expr",
    "redundant-self",
    "truthy-bool",
    "truthy-iterable",
    "unused-awaitable",
]
show_error_codes = true
strict = true
warn_unreachable = true
warn_unused_configs = true
follow_imports = "silent"
ignore_missing_imports = true


[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_decorators = false

[tool.pytest.ini_options]
addopts = ["-ra", "--strict-config"]
testpaths = ["tests/"]

[tool.ruff]
line-length = 100
preview = true
src = ["starlette_admin_litestar_plugin", "tests"]
target-version = "py38"

[tool.ruff.lint]
select = [
    "A",
    "ARG",
    "ASYNC",
    "B",
    "BLE",
    "C4",
    "C90",
    "D",
    "DTZ",
    "E",
    "EM",
    "ERA",
    "EXE",
    "F",
    "FA",
    "FBT",
    "FIX",
    "FLY",
    "FURB",
    "G",
    "I",
    "ICN",
    "INP",
    "ISC",
    "LOG",
    "N",
    "NPY",
    "PERF",
    "PGH",
    "PIE",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "PT",
    "PTH",
    "Q",
    "RET",
    "RSE",
    "RUF",
    "S",
    "SIM",
    "SLF",
    "SLOT",
    "T10",
    "T20",
    "TCH",
    "TD",
    "TID",
    "TRY",
    "UP",
    "W",
    "YTT",
]

ignore = [
    "A003",
    "D100",
    "D101",
    "D104",
    "D105",
    "D102",
    "D103",
    "D106",
    "D107",
    "D203",
    "D213",
    "E501",
    "ISC001",
    "UP040",
]

pydocstyle.convention = "google"

pep8-naming.classmethod-decorators = ["classmethod"]

isort.known-first-party = ["starlette_admin_litestar_plugin", "tests"]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.*" = ["D", "S", "DTZ001"]

[tool.uv.sources]
starlette-admin = { path = "../starlette-admin", editable = true }
